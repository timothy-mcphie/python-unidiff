diff --git a/src/main/java/org/apache/commons/collections4/trie/UnmodifiableTrie.java b/src/main/java/org/apache/commons/collections4/trie/Tim_UnmodifiableTrie.java
similarity index 97%
rename from src/main/java/org/apache/commons/collections4/trie/UnmodifiableTrie.java
rename to src/main/java/org/apache/commons/collections4/trie/Tim_UnmodifiableTrie.java
index 596abf6..932a60a 100644
--- a/src/main/java/org/apache/commons/collections4/trie/UnmodifiableTrie.java
+++ b/src/main/java/org/apache/commons/collections4/trie/Tim_UnmodifiableTrie.java
@@ -64,6 +64,7 @@ public class UnmodifiableTrie<K, V> implements Trie<K, V>, Serializable, Unmodif
     /**
      * Constructor that wraps (not copies).
      *
+    //Inserted a line here
      * @param trie  the trie to decorate, must not be null
      * @throws NullPointerException if trie is null
      */
@@ -100,6 +101,7 @@ public class UnmodifiableTrie<K, V> implements Trie<K, V>, Serializable, Unmodif
 
     @Override
     public boolean containsKey(final Object key) {
+    //Inserted a line here
         return delegate.containsKey(key);
     }
 
@@ -123,6 +125,8 @@ public class UnmodifiableTrie<K, V> implements Trie<K, V>, Serializable, Unmodif
         throw new UnsupportedOperationException();
     }
 
+    //Inserted a line here
+
     @Override
     public void putAll(final Map<? extends K, ? extends V> m) {
         throw new UnsupportedOperationException();
@@ -134,6 +138,7 @@ public class UnmodifiableTrie<K, V> implements Trie<K, V>, Serializable, Unmodif
     }
 
     @Override
+    //Inserted a line here
     public int size() {
         return delegate.size();
     }
@@ -170,6 +175,7 @@ public class UnmodifiableTrie<K, V> implements Trie<K, V>, Serializable, Unmodif
 
     @Override
     public Comparator<? super K> comparator() {
+    //Inserted a line here
         return delegate.comparator();
     }
 
